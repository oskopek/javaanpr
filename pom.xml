<!--
  ~ Copyright 2013 JavaANPR contributors
  ~ Copyright 2006 Ondrej Martinsky
  ~ Licensed under the Educational Community License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.osedu.org/licenses/ECL-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS IS"
  ~ BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
  ~ or implied. See the License for the specific language governing
  ~ permissions and limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.sf.javaanpr</groupId>
    <artifactId>javaanpr</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <name>JavaANPR</name>
    <packaging>jar</packaging>

    <!-- Maven Sonatype Repo -->
    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <licenses>
        <license>
            <name>Educational Community License, Version 2.0</name>
            <url>http://opensource.org/licenses/ECL-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/oskopek/javaanpr.git</url>
        <connection>scm:git:https://github.com/oskopek/javaanpr.git</connection>
        <developerConnection>scm:git:https://github.com/oskopek/javaanpr.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <url>https://www.ohloh.net/p/javaanpr</url>
    <description>JavaANPR is an automatic number plate recognition software, which implements algorithmic and
        mathematical principles from field of artificial intelligence, machine vision and neural networks. It was
        created by Ondrej Martinsky in 2006 and 2007 as part of the research plan "Security-oriented research in
        information technology, MSM 0021630528" at Brno University of Technology.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skipTests>false</skipTests>
        <skipITs>true</skipITs>
    </properties>

    <prerequisites>
        <maven>3.2.3</maven>
    </prerequisites>

    <build>
        <finalName>javaanpr</finalName>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                    <mainClass>net.sf.javaanpr.jar.Main</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                    <skipITs>${skipITs}</skipITs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <format>xml</format>
                    <maxmem>256m</maxmem>
                    <aggregate>true</aggregate>
                    <check>
                        <branchRate>85</branchRate>
                        <lineRate>85</lineRate>
                        <haltOnFailure>false</haltOnFailure>
                        <totalBranchRate>85</totalBranchRate>
                        <totalLineRate>85</totalLineRate>
                        <packageLineRate>85</packageLineRate>
                        <packageBranchRate>85</packageBranchRate>
                        <regexes>
                            <regex>
                                <pattern>net.sf.javaanpr.jar.*</pattern>
                                <branchRate>0</branchRate>
                                <lineRate>0</lineRate>
                            </regex>
                        </regexes>
                    </check>
                </configuration>
                <!-- <executions>
                            <execution>
                                <goals>
                                    <goal>clean</goal>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                </executions> -->
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>2.2.0</version>
                <configuration>
                    <!--suppress MavenModelInspection -->
                    <repoToken>${env.COVERALLS_TOKEN}</repoToken>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.16</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <checkstyleRules>
                                <module name="Checker">
                                    <!--<property name="severity" value="warning" default="warning"/>-->
                                    <!-- Checks whether files end with a new line.                        -->
                                    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
                                    <module name="NewlineAtEndOfFile">
                                        <property name="lineSeparator" value="lf"/>
                                    </module>
                                    <!-- Checks that property files contain the same keys.         -->
                                    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
                                    <module name="Translation"/>
                                    <!-- Checks for whitespace                               -->
                                    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
                                    <module name="FileTabCharacter">
                                        <property name="severity" value="error"/>
                                        <property name="eachLine" value="true"/>
                                    </module>
                                    <!-- Miscellaneous other checks.                   -->
                                    <!-- See http://checkstyle.sf.net/config_misc.html -->
                                    <module name="RegexpSingleline">
                                        <property name="format" value="\s+$"/>
                                        <property name="minimum" value="0"/>
                                        <property name="maximum" value="0"/>
                                        <property name="message" value="Line has trailing spaces."/>
                                    </module>
                                    <module name="TreeWalker">
                                        <property name="cacheFile" value="target/cachefile"/>
                                        <property name="tabWidth" value="4"/>
                                        <!-- Checks for Javadoc comments.                     -->
                                        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
                                        <module name="JavadocMethod">
                                            <property name="allowMissingJavadoc" value="true"/>
                                        </module>
                                        <module name="JavadocStyle"/>
                                        <!-- Checks for imports                              -->
                                        <!-- See http://checkstyle.sf.net/config_import.html -->
                                        <module name="IllegalImport"/>
                                        <!-- defaults to sun.* packages -->
                                        <module name="RedundantImport"/>
                                        <module name="UnusedImports"/>
                                        <!-- Checks for Size Violations.                    -->
                                        <!-- See http://checkstyle.sf.net/config_sizes.html -->
                                        <module name="LineLength">
                                            <property name="max" value="120"/>
                                        </module>
                                        <module name="MethodLength">
                                            <property name="severity" value="warning"/>
                                        </module>
                                        <module name="ParameterNumber"/>
                                        <!-- Checks for whitespace                               -->
                                        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
                                        <module name="EmptyForIteratorPad"/>
                                        <module name="GenericWhitespace"/>
                                        <module name="MethodParamPad"/>
                                        <module name="NoWhitespaceAfter"/>
                                        <module name="NoWhitespaceBefore"/>
                                        <module name="OperatorWrap"/>
                                        <module name="ParenPad"/>
                                        <module name="TypecastParenPad"/>
                                        <module name="SeparatorWrap">
                                            <property name="tokens" value="DOT"/>
                                            <property name="option" value="nl"/>
                                        </module>
                                        <module name="SeparatorWrap">
                                            <property name="tokens" value="COMMA"/>
                                        </module>
                                        <module name="WhitespaceAfter"/>
                                        <module name="WhitespaceAround"/>
                                        <!-- Modifier Checks                                    -->
                                        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
                                        <module name="ModifierOrder"/>
                                        <module name="RedundantModifier"/>
                                        <!-- Checks for blocks. You know, those {}'s         -->
                                        <!-- See http://checkstyle.sf.net/config_blocks.html -->
                                        <module name="EmptyBlock">
                                            <property name="severity" value="warning"/>
                                        </module>
                                        <module name="LeftCurly"/>
                                        <module name="NeedBraces"/>
                                        <module name="RightCurly"/>
                                        <!-- Checks for common coding problems               -->
                                        <!-- See http://checkstyle.sf.net/config_coding.html -->
                                        <module name="EmptyStatement"/>
                                        <module name="EqualsHashCode"/>
                                        <module name="IllegalInstantiation"/>
                                        <module name="InnerAssignment"/>
                                        <module name="MissingSwitchDefault"/>
                                        <module name="SimplifyBooleanExpression"/>
                                        <module name="SimplifyBooleanReturn"/>
                                        <!-- Checks for class design                         -->
                                        <!-- See http://checkstyle.sf.net/config_design.html -->
                                        <module name="FinalClass"/>
                                        <module name="HideUtilityClassConstructor"/>
                                        <module name="InterfaceIsType"/>
                                        <!-- Miscellaneous other checks.                   -->
                                        <!-- See http://checkstyle.sf.net/config_misc.html -->
                                        <module name="ArrayTypeStyle"/>
                                        <module name="UpperEll"/>
                                    </module>
                                </module>
                            </checkstyleRules>
                            <consoleOutput>true</consoleOutput>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <failOnViolation>true</failOnViolation>
                            <failsOnError>true</failsOnError>
                            <includeResources>true</includeResources>
                            <includeTestResources>true</includeTestResources>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>net.sf.javaanpr.jar.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.swinglabs</groupId>
            <artifactId>swing-layout</artifactId>
            <version>1.0.3</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.3.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.0</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.4</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.3</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>it</id>
            <!-- Integration Tests -->
            <properties>
                <skipTests>false</skipTests>
                <skipITs>${skipTests}</skipITs>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.revapi</groupId>
                        <artifactId>revapi-maven-plugin</artifactId>
                        <version>0.8.1</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.revapi</groupId>
                                <artifactId>revapi-java</artifactId>
                                <version>0.13.1</version>
                            </dependency>
                            <dependency>
                                <groupId>org.revapi</groupId>
                                <artifactId>revapi-reporter-text</artifactId>
                                <version>0.6.1</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <oldArtifacts>
                                <artifact>${project.groupId}:${project.artifactId}:2.0.0</artifact>
                            </oldArtifacts>
                            <analysisConfigurationFiles>
                                <path>src/build/revapi-config.json</path>
                            </analysisConfigurationFiles>
                            <failOnMissingConfigurationFiles>true</failOnMissingConfigurationFiles>
                        </configuration>
                        <executions>
                            <execution>
                                <id>check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
